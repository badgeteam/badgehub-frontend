/**
 * Generated by orval v7.1.1 🍺
 * Do not edit manually.
 * badgehub-api
 * Node project for the BadgeHub API
 * OpenAPI spec version: 3
 */
import type {
  App,
  AppDetails,
  Category,
  GetAppsParams
} from '../../models'
import { fetchWithBaseUrl } from '../../../../fetch-from-api';

/**
 * Get list of categories
 */
export type getCategoriesResponse = {
  data: Category[];
  status: number;
}

export const getGetCategoriesUrl = () => {


  return `/api/v3/categories`
}

export const getCategories = async ( options?: RequestInit): Promise<getCategoriesResponse> => {
  
  return fetchWithBaseUrl<Promise<getCategoriesResponse>>(getGetCategoriesUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * Get list of apps, optionally limited by page start/length and/or filtered by category
 */
export type getAppsResponse = {
  data: App[];
  status: number;
}

export const getGetAppsUrl = (params?: GetAppsParams,) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? 'null' : value.toString())
    }
  });

  return normalizedParams.size ? `/api/v3/apps?${normalizedParams.toString()}` : `/api/v3/apps`
}

export const getApps = async (params?: GetAppsParams, options?: RequestInit): Promise<getAppsResponse> => {
  
  return fetchWithBaseUrl<Promise<getAppsResponse>>(getGetAppsUrl(params),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * Get app details
 */
export type getAppDetailsResponse = {
  data: AppDetails;
  status: number;
}

export const getGetAppDetailsUrl = (slug: string,) => {


  return `/api/v3/apps/${slug}`
}

export const getAppDetails = async (slug: string, options?: RequestInit): Promise<getAppDetailsResponse> => {
  
  return fetchWithBaseUrl<Promise<getAppDetailsResponse>>(getGetAppDetailsUrl(slug),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


